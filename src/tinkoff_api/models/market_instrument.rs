/*
 * OpenAPI
 *
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: al.a.volkov@tinkoff.ru
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketInstrument {
    #[serde(rename = "figi")]
    pub figi: String,
    #[serde(rename = "ticker")]
    pub ticker: String,
    #[serde(rename = "isin", skip_serializing_if = "Option::is_none")]
    pub isin: Option<String>,
    /// Шаг цены
    #[serde(rename = "minPriceIncrement", skip_serializing_if = "Option::is_none")]
    pub min_price_increment: Option<f64>,
    #[serde(rename = "lot")]
    pub lot: i32,
    /// Минимальное число инструментов для покупки должно быть не меньше, чем размер лота х количество лотов
    #[serde(rename = "minQuantity", skip_serializing_if = "Option::is_none")]
    pub min_quantity: Option<i32>,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<crate::tinkoff_api::models::Currency>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "type")]
    pub _type: crate::tinkoff_api::models::InstrumentType,
}

impl MarketInstrument {
    pub fn new(figi: String, ticker: String, lot: i32, name: String, _type: crate::tinkoff_api::models::InstrumentType) -> MarketInstrument {
        MarketInstrument {
            figi,
            ticker,
            isin: None,
            min_price_increment: None,
            lot,
            min_quantity: None,
            currency: None,
            name,
            _type,
        }
    }
}


